diff --git a/src/DataFixtures/ArticleFixtures.php b/src/DataFixtures/ArticleFixtures.php
index 24745d60..90f23e0f 100644
--- a/src/DataFixtures/ArticleFixtures.php
+++ b/src/DataFixtures/ArticleFixtures.php
@@ -4,9 +4,11 @@ namespace App\DataFixtures;
 
 use App\Entity\Article;
 use App\Entity\Comment;
+use App\Entity\Tag;
+use Doctrine\Common\DataFixtures\DependentFixtureInterface;
 use Doctrine\Common\Persistence\ObjectManager;
 
-class ArticleFixtures extends BaseFixture
+class ArticleFixtures extends BaseFixture implements DependentFixtureInterface
 {
     private static $articleTitles = [
         'Why Asteroids Taste Like Bacon',
@@ -58,8 +60,20 @@ EOF
                 ->setHeartCount($this->faker->numberBetween(5, 100))
                 ->setImageFilename($this->faker->randomElement(self::$articleImages))
             ;
+
+            $tags = $this->getRandomReferences(Tag::class, $this->faker->numberBetween(0, 5));
+            foreach ($tags as $tag) {
+                $article->addTag($tag);
+            }
         });
 
         $manager->flush();
     }
+
+    public function getDependencies()
+    {
+        return [
+            TagFixture::class,
+        ];
+    }
 }
diff --git a/src/DataFixtures/BaseFixture.php b/src/DataFixtures/BaseFixture.php
index 191afe99..ed8d012d 100644
--- a/src/DataFixtures/BaseFixture.php
+++ b/src/DataFixtures/BaseFixture.php
@@ -58,4 +58,14 @@ abstract class BaseFixture extends Fixture
 
         return $this->getReference($randomReferenceKey);
     }
+
+    protected function getRandomReferences(string $className, int $count)
+    {
+        $references = [];
+        while (count($references) < $count) {
+            $references[] = $this->getRandomReference($className);
+        }
+
+        return $references;
+    }
 }
